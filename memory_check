#!/bin/bash
clear;

#1. Check memory Usage
#constants
total_memory=$( free | grep Mem: | awk '{ print $2 }' )
used_memory=$( free | grep Mem: | awk '{ print $3 }' )
percent=0.01
no_error=true
critical_threshold=0
warning_threshold=0

#Check if no parameters supplied
if [ $# -eq 0 ]; then
  echo -e "Error: Missing parameters:\n
  -c 'critical_threshold_percentage' \n
  -w 'warning_threshold_percentage' \n
  -e 'email-address_to_send_report'\n">&2
  echo -n "Enter the value for critical_threshold_percentage:(-c) "
  read critical_threshold
  echo -n "Enter the value for warning_threshold_percentage:(-w) "
  read warning_threshold
  echo -n "Enter the value for email-address_to_send_report:(-e) "
  read email
  clear;
else
  while getopts ":c:w:e:" opt; do
    case $opt in
      c) critical_threshold=$OPTARG;;
      w) warning_threshold=$OPTARG;;
      e) email=$OPTARG ;;
    esac
  done
fi

#Check if critical threshold is greater than warning threshold
while [ $critical_threshold -le $warning_threshold ]; do
  echo -e "ERROR: Critical threshold must be greater than the Warning Threshold:\n
  -c 'critical_threshold_value' \n
  -w 'warning_threshold_value' \n
  -e 'email-address_to_send_report'\n">&2
  echo -n "Enter the value for critical_threshold_percentage:(-c) "
  read critical_threshold
  echo -n "Enter the value for warning_threshold_percentage:(-w) "
  read warning_threshold
  clear;
done

#critical and warning threshold true value
crit_value=$(echo $total_memory $percent $critical_threshold | awk '{printf "%d\n",$1*$2*$3}')
warn_value=$(echo $total_memory $percent $warning_threshold | awk '{printf "%d\n",$1*$2*$3}')

#2. Exit codes
if [ $used_memory -ge $crit_value ]; then
#3. Send email report
subject=$(date +"%Y%m%d %H:%M")
message=`ps axo %mem,comm,pid | sort -nr | head -n 10`
mail -s "$subject" "$email" <<< "$message"
  exit 2
elif [ $used_memory -ge $warn_value ]; then
  exit 1
else 
  exit 0
fi





